---
import notices from "@data/notice.yml";
import type { Notice } from "@data/schemas/notice";
import Markdown from "@components/utils/Markdown.astro";
import type { Lang } from "@components/types";

/**
 * `Markdown`の利用例として紹介されています．
 * このコンポーネントを利用しなくなる場合は，`src/components/README.md`を編集して，
 * 別の利用例を紹介するようにしてください．
 *
 * 利用ページ：
 * - https://utelecon.adm.u-tokyo.ac.jp/
 * - https://utelecon.adm.u-tokyo.ac.jp/notice/
 */

export interface Props {
  lang: Lang;
  strip?: boolean;
}

interface NoticeContent {
  date: Date;
  content: string;
}

const { lang, strip } = Astro.props;

const contents: NoticeContent[] = [];

for (const notice of notices) {
  const content = notice.content[lang] ?? notice.content.ja;
  if (!content) continue;

  if (!strip || contents.length < (notice.important ? 8 : 4)) {
    contents.push({ date: notice.date, content });
  }
}
---

<ul>
  {
    contents.map(({ date, content }) => (
      <li>
        <span class="date">{date.toLocaleDateString("ja-JP")}</span>
        <span class="content">
          <Markdown content={content} />
        </span>
      </li>
    ))
  }
</ul>

<style lang="scss">
  @import "@styles/color.scss";

  ul {
    display: grid;
    grid-template-columns: 6em 1fr;

    li {
      display: contents;
    }
  }

  .date {
    color: $heading-color;
  }

  @media (max-width: 640px) {
    ul {
      padding-left: 0;
      grid-template-columns: unset;
    }
    .content {
      margin-left: 1em;
    }
  }
</style>
